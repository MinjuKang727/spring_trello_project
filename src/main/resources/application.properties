spring.application.name=spring-trello
#application-oauth.yml
spring.profiles.include=oauth

jwt.secret.key=${jwt-secret-key}
admin.key=${admin-key}

# ???
kakao-client-id=${kakao-client-id}

# ??
slack.bot-token=${slack-bot-token}
#slack.client-id=${slack-client-id}
#slack.client-secret=${slack-client-secret}
#slack.state=${slack-state}
#slack.user-token=${slack-user-token}

# sql detail
spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql= true

spring.datasource.url=${mysql-url}
spring.datasource.username=${mysql-username}
spring.datasource.password=${mysql-password}

# kakao
kakao.client.id: ${kakao-client-id}
kakao.redirect.uri: http://localhost:8080/auth/kakaoCallback

spring.data.redis.port=6379
spring.data.redis.host=127.0.0.1

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never

logging.level.org.springframework.security=debug


# mail
spring.mail.host=${mail-host}
spring.mail.port=${mail-port}
spring.mail.username=${mail-username}
spring.mail.password=${mail-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true

#multipart file size limit
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
# ?? ??? HTTP? ??
server.port=8080

# HTTPS ?? ??
server.additional-ports=8443
# SSL ?? ???
server.ssl.enabled=true
# PKCS#12 ?? ??
server.ssl.key-store=classpath:keystore.p12
# keystore.p12 ?? ? ??? ????
server.ssl.key-store-password=password123
# keystore ??
server.ssl.key-store-type=PKCS12
# ?????? ??? ??? ??(alias)
server.ssl.key-alias=tomcat
# ?? Whitelabel ??? ????
server.error.whitelabel.enabled=false
# ?? ??? ?? ?? ??
server.error.path=/error